window.Final=Ember.Application.create(),Final.ref=new Firebase("https://sportsproject.firebaseio.com/"),Final.ApplicationAdapter=DS.FirebaseAdapter.extend({firebase:Final.ref}),moment.locale("en",{calendar:{lastDay:"MMM Do LT",sameDay:"LT",nextDay:"[Tomorrow at] LT",lastWeek:"MMM Do LT",nextWeek:"dddd [at] LT",sameElse:"MMM Do LT"}}),Final.GameView=Ember.View.extend({didInsertElement:function(){console.log("didInsertElement fired"),console.log($(".messages div").last().offset(top)),console.log("Length",this.get("controller.messages.length"))},messagesWereFetched:function(){console.log("Messages fetched",this.get("controller.content.messages.isFulfilled")),this.get("controller.content.messages.isFulfilled")&&Ember.run.next(this,function(){var e=this.$(".messages div").last().offset();e&&this.$(".messages").animate({scrollTop:this.$(".messages div").last().offset().top},0)})}.observes("controller.content.messages.isFulfilled")}),Ember.Handlebars.helper("date-format",function(e){return moment(e).calendar()}),Final.Router.map(function(){this.route("signUp"),this.route("login"),this.route("game",{path:"/game/:game_id"})}),Final.GameRoute=Ember.Route.extend({model:function(e){return this.store.find("game",e.game_id)}}),Final.IndexRoute=Ember.Route.extend({model:function(){return this.store.find("game")}}),Final.ApplicationController=Ember.Controller.extend({currentUser:null}),Final.SignUpController=Ember.Controller.extend({needs:["application"],actions:{signUp:function(){var e=this,t=this.get("email"),s=this.get("password");Final.ref.createUser({email:t,password:s},function(n){if(null===n)$("input").val(""),e.transitionToRoute("index"),Final.ref.authWithPassword({email:t,password:s},function(t,s){if(null===t){var n=e.store.createRecord("user",{id:s.uid,username:e.get("username")});n.save()}else console.log(t.message)},{remember:"sessionOnly"}),console.log("Created User");else{var r=function(){$(".error").fadeOut(1e3,function(){$(".error").empty(),$(".error").fadeIn()})};$(".error").empty(),$(".error").append("<p>"+n.message+"</p>"),setTimeout(r,3e3),console.log(n.message)}})}}}),Final.LoginController=Ember.Controller.extend({needs:["application"],actions:{login:function(){var e=this;Final.ref.authWithPassword({email:this.get("email"),password:this.get("password")},function(t,s){if(null===t)console.log("Successfully logged in as",s.uid),e.transitionToRoute("index");else{var n=function(){$(".error").fadeOut(1e3,function(){$(".error").empty(),$(".error").fadeIn()})};$(".error").empty(),$(".error").append("<p>"+t.message+"</p>"),setTimeout(n,3e3),console.log(t.message)}})}}}),Final.IndexController=Ember.ArrayController.extend({needs:["application"],actions:{logout:function(){Final.ref.unauth(),this.transitionToRoute("login")}}}),Final.GameController=Ember.ObjectController.extend({needs:["application"],newMessage:"",actions:{post:function(){console.log($(".messages div").last());var e=localStorage.getItem("firebase:session::sportsproject");if(null===e)throw new Error("You must be logged in to chat");var t=JSON.parse(e),s=t.uid,n=this;this.get("newMessage").length>0&&this.store.find("user",s).then(function(e){var t=n.store.createRecord("message",{createdAt:new Date,content:n.get("newMessage"),user:e,reputation:0});t.save(),n.get("model.messages").addObject(t);var s=this.$(".messages div").last().offset();s&&this.$(".messages").animate({scrollTop:this.$(".messages div").last().offset().top},0),console.log(n.get("model.messages").length),n.get("model").save(),n.set("newMessage","")})},like:function(e){var t=new Firebase("https://sportsproject.firebaseio.com/messages/"+e.id+"/reputation");t.transaction(function(e){return e+1})},dislike:function(e){var t=new Firebase("https://sportsproject.firebaseio.com/messages/"+e.id+"/reputation");t.transaction(function(e){return e-1})}}}),Final.User=DS.Model.extend({username:DS.attr("string"),image:DS.attr("string")}),Final.Message=DS.Model.extend({content:DS.attr("string"),user:DS.belongsTo("user",{async:!0}),game:DS.belongsTo("game"),createdAt:DS.attr("date"),reputation:DS.attr("number")}),Final.Game=DS.Model.extend({timeLeft:DS.attr("string"),url:DS.attr("string"),messages:DS.hasMany("message",{async:!0}),teamOne:DS.belongsTo("team",{embedded:!0}),teamTwo:DS.belongsTo("team",{embedded:!0})}),Final.Team=DS.Model.extend({teamName:DS.attr("string"),rank:DS.attr("string"),quarterOneScore:DS.attr("string"),quarterTwoScore:DS.attr("string"),quarterThreeScore:DS.attr("string"),quarterFourScore:DS.attr("string"),totalScore:DS.attr("string"),logo:DS.attr("string")});